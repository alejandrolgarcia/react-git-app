{"version":3,"sources":["components/CategoryAdd.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","className","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uKAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,UAAU,eACVC,MAAQV,EACRW,SApBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OAEI,qBAAKP,UAAU,yCAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKqB,IAAMd,EAAMP,UAAU,YAAYsB,IAAML,IAC7C,qBAAKjB,UAAU,cAAf,SACI,uBAAOA,UAAU,aAAjB,SACMiB,YCPbM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WAEPvB,EAAQC,GACHuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAItB,CAAEnB,IAEEoB,EDf0BK,CAAczB,GAAlCa,EAJwB,EAI7BN,KAAaY,EAJgB,EAIhBA,QAErB,OACI,qCACI,qBAAIxB,UAAU,yCAAd,cAA0DK,KAExDmB,GAAW,mBAAGxB,UAAU,qCAAb,0BAEb,qBAAKA,UAAU,MAAf,SAEQkB,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEUA,GADAA,EAAIC,aEhBzBe,EAAe,WAAM,MAGMzC,mBAAS,CAAC,WAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWlB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCjBlC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.115a27af.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CategoryAdd = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit  = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ){\n            setCategories( cats => [ inputValue, ...cats ]);\n            setInputValue('');\n        }\n        // console.log('Submit hecho');\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            /> \n        </form>\n    )\n}\n\nCategoryAdd.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Db0RI0Z4Qj4MN1Vh3jhCe9CChQaEuQUb`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react';\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    return (\n\n        <div className=\"animate__animated animate__backInRight\">\n            <div className=\"card\">\n                <img src={ url } className=\"img-fluid\" alt={ title } />\n                <div className=\"card-footer\">\n                    <small className=\"text-muted\">\n                        { title }\n                    </small>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from './hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__backInRight\"> { category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flipInX\">Loading gifs</p> }\n\n            <div className=\"row\">\n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ... img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","\nimport React, { useEffect, useState } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs(category)\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            });\n\n    }, [ category ]);\n\n    return state;\n\n}\n","import React, { useState } from 'react'\nimport { CategoryAdd } from './components/CategoryAdd';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['Batman', 'Flash', 'Superman', 'Wonder Woman'];\n    const [categories, setCategories] = useState(['Batman']);\n\n    // const handleAdd = () => {\n    //     setCategories([... categories, 'Linterna Verde']);\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <CategoryAdd setCategories={ setCategories }/>\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => \n                        <GifGrid \n                            key={ category }\n                            category={ category }\n                        />\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}